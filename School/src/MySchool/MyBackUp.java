/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MySchool;

import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author SANTOSH
 */
public class MyBackUp extends javax.swing.JFrame {
        File srcDir=null;
        File destDir=null;
        String srcAdd="",destAdd="";
    /**
     * Creates new form MyBackUp
     */
    public MyBackUp() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        backLabel = new javax.swing.JLabel();
        refreshLabel = new javax.swing.JLabel();
        logoutLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        selectpathCheckBox = new javax.swing.JCheckBox();
        srcpathTextField = new javax.swing.JTextField();
        srcdirButton = new javax.swing.JButton();
        destpathTextField = new javax.swing.JTextField();
        destdirButton = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        backupButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));

        jLabel33.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("TAKE A BACKUP OF DATA");

        backLabel.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        backLabel.setForeground(new java.awt.Color(255, 255, 255));
        backLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backLabel.setText("<< BACK");
        backLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLabelMouseClicked(evt);
            }
        });

        refreshLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        refreshLabel.setForeground(new java.awt.Color(255, 255, 255));
        refreshLabel.setText("Refresh");
        refreshLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refreshLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshLabelMouseClicked(evt);
            }
        });

        logoutLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        logoutLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoutLabel.setText("Log Out");
        logoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(backLabel)
                .addGap(207, 207, 207)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutLabel)
                .addGap(48, 48, 48)
                .addComponent(refreshLabel)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(backLabel)
                    .addComponent(refreshLabel)
                    .addComponent(logoutLabel))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        selectpathCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        selectpathCheckBox.setText("PreDefined Source Directory");
        selectpathCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectpathCheckBoxItemStateChanged(evt);
            }
        });

        srcpathTextField.setEditable(false);
        srcpathTextField.setBackground(new java.awt.Color(255, 255, 255));
        srcpathTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        srcpathTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255), 1, true));
        srcpathTextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        srcpathTextField.setEnabled(false);

        srcdirButton.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        srcdirButton.setText("Source Folder");
        srcdirButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        srcdirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcdirButtonActionPerformed(evt);
            }
        });

        destpathTextField.setEditable(false);
        destpathTextField.setBackground(new java.awt.Color(255, 255, 255));
        destpathTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        destpathTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255), 1, true));
        destpathTextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        destpathTextField.setEnabled(false);
        destpathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destpathTextFieldActionPerformed(evt);
            }
        });

        destdirButton.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        destdirButton.setText("Destination Folder");
        destdirButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        destdirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destdirButtonActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel30.setText("( Choose The Directry  you want to copy with subDirectries and Files )");

        jLabel32.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel32.setText("( Select The Directry where you want copy the Directry  )");

        backupButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        backupButton.setText("BACKUP");
        backupButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backupButton.setMaximumSize(new java.awt.Dimension(35, 10));
        backupButton.setMinimumSize(new java.awt.Dimension(35, 10));
        backupButton.setPreferredSize(new java.awt.Dimension(35, 10));
        backupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectpathCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(destpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(destdirButton))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(srcpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(srcdirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(391, 391, 391)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(426, 426, 426)
                        .addComponent(backupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(selectpathCheckBox)
                .addGap(72, 72, 72)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srcpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srcdirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30)
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destdirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(backupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectpathCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectpathCheckBoxItemStateChanged
        try{
            if(selectpathCheckBox.isSelected()==true){
                srcdirButton.setEnabled(false);
                srcDir=new File(".\\test");
                srcAdd=".\\test";
                srcpathTextField.setText("   Default directory selected ");
                srcpathTextField.setBackground(new Color(240,240,240));
                destpathTextField.setText("");                
            }
            else{
                srcAdd=null;
                srcpathTextField.setText(" ---------- Empty ---------- ");
                srcdirButton.setEnabled(true);                
            }
        }catch(Exception ex){}
    }//GEN-LAST:event_selectpathCheckBoxItemStateChanged

    private void srcdirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcdirButtonActionPerformed
        try{
            JFileChooser chooser=null;
            chooser=new JFileChooser();
            chooser.setDialogTitle("Destnation Dir");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setCurrentDirectory(new File("."));

            int result = chooser.showOpenDialog(null);

            if (result == JFileChooser.APPROVE_OPTION){
                srcAdd=chooser.getSelectedFile().getAbsolutePath();
                srcDir=new File(srcAdd);
                srcpathTextField.setText(srcAdd);
            }
        }catch(Exception e){
            System.out.println("Problem inside source Directory Button "+e);
        }
    }//GEN-LAST:event_srcdirButtonActionPerformed

    private void destpathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destpathTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destpathTextFieldActionPerformed

    private void destdirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destdirButtonActionPerformed
        try
        {
            JFileChooser chooser=null;
            chooser=new JFileChooser();
            chooser.setDialogTitle("Destnation Dir");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setCurrentDirectory(new File("."));

            int result = chooser.showOpenDialog(null);

            if (result == JFileChooser.APPROVE_OPTION){
                destAdd=chooser.getSelectedFile().getAbsolutePath();
                destDir=null;
                destDir=new File(destAdd);
                destpathTextField.setText(destAdd);
            }
        }catch(Exception ex){javax.swing.JOptionPane.showMessageDialog(null, ex);}
    }//GEN-LAST:event_destdirButtonActionPerformed

    private void backupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupButtonActionPerformed

        if("".equals(srcpathTextField.getText())||srcAdd==null){
            JOptionPane.showMessageDialog(null,"Choose the Source Directry");
            srcdirButton.requestFocusInWindow();
        }else if("".equals(destpathTextField.getText())){
            JOptionPane.showMessageDialog(null,"Choose the Destination Directry");
            destdirButton.requestFocusInWindow();
        }else if((srcpathTextField.getText()).equals(destpathTextField.getText())){
            JOptionPane.showMessageDialog(null,"Source and Destination Directry are same");
            srcdirButton.requestFocusInWindow();
        }else{
            try{
                    int i=JOptionPane.showConfirmDialog(null, "Are you sure you want to take backup of all data including images", "Delete Record", JOptionPane.OK_OPTION);                         
                    if(i==0){                        
                         FileUtils.copyDirectory(srcDir,destDir);
                        JOptionPane.showMessageDialog(null,"Backup Completed","BACKUP",JOptionPane.INFORMATION_MESSAGE);                                                               
                    }
            } catch (Exception e) { 
                System.out.println("Error inside BackUp button action "+e);
                JOptionPane.showMessageDialog(null, "Backup Failed", "BACKUP", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_backupButtonActionPerformed

    private void backLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseClicked
        // TODO add your handling code here:
        backLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        MainPage ob = new MainPage();
        ob.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backLabelMouseClicked

    private void refreshLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshLabelMouseClicked
        refreshLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        MyBackUp ob=new MyBackUp();
        ob.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_refreshLabelMouseClicked

    private void logoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseClicked
        logoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        try{
            MyLogin.con.close();
        }catch(Exception e){ }

        MyLogin ob=new MyLogin();
        ob.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyBackUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyBackUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyBackUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyBackUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyBackUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backLabel;
    private javax.swing.JButton backupButton;
    private javax.swing.JButton destdirButton;
    private javax.swing.JTextField destpathTextField;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JLabel refreshLabel;
    private javax.swing.JCheckBox selectpathCheckBox;
    private javax.swing.JButton srcdirButton;
    private javax.swing.JTextField srcpathTextField;
    // End of variables declaration//GEN-END:variables
}
